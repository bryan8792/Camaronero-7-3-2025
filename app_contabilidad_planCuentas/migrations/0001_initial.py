# Generated by Django 4.0.2 on 2024-07-12 17:46

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_reg_empresa', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EncabezadoCuentasPlanCuenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.IntegerField(default=0)),
                ('tip_cuenta', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tipo de Cuenta')),
                ('tip_transa', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tipo de Transacción')),
                ('fecha', models.DateField(blank=True, null=True, verbose_name='Fecha')),
                ('comprobante', models.CharField(blank=True, max_length=400, null=True, verbose_name='Comprobante')),
                ('descripcion', models.CharField(blank=True, max_length=400, null=True, verbose_name='Descripción')),
                ('direccion', models.TextField(blank=True, default='Ingrese una Direccion', null=True, verbose_name='Dirección')),
                ('ruc', models.CharField(blank=True, max_length=400, null=True, verbose_name='RUC')),
            ],
            options={
                'verbose_name': 'tb_encabezadocuentaplanCuenta',
                'verbose_name_plural': 'tb_encabezadocuentasplanCuenta',
                'db_table': 'tb_encabezadocuentasplanCuenta',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Recibo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voucher_type', models.CharField(choices=[('01', 'FACTURA'), ('04', 'NOTA DE CRÉDITO'), ('08', 'TICKET DE VENTA')], max_length=10, verbose_name='Tipo de Comprobante')),
                ('establishment_code', models.CharField(max_length=3, verbose_name='Código del Establecimiento Emisor')),
                ('issuing_point_code', models.CharField(max_length=3, verbose_name='Código del Punto de Emisión')),
                ('sequence', models.PositiveIntegerField(default=1, verbose_name='Secuencia actual')),
            ],
            options={
                'verbose_name': 'Comprobante',
                'verbose_name_plural': 'Comprobantes',
                'db_table': 'tb_comprobantes',
            },
        ),
        migrations.CreateModel(
            name='VoucherErrors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(default=datetime.datetime.now)),
                ('datetime_joined', models.DateTimeField(default=datetime.datetime.now)),
                ('environment_type', models.PositiveIntegerField(choices=[(1, 'PRUEBAS'), (2, 'PRODUCCIÓN')], default=1)),
                ('reference', models.CharField(max_length=20)),
                ('stage', models.CharField(choices=[('xml_creation', 'Creación del XML'), ('xml_signature', 'Firma del XML'), ('xml_validation', 'Validación del XML'), ('xml_authorized', 'Autorización del XML'), ('sent_by_email', 'Enviado por email')], default='xml_creation', max_length=20)),
                ('errors', models.JSONField(default=dict)),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_contabilidad_planCuentas.recibo')),
            ],
            options={
                'verbose_name': 'Errores del Comprobante',
                'verbose_name_plural': 'Errores de los Comprobantes',
                'db_table': 'tb_errores_comprobantes',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='PlanCuenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(default=0, max_length=50)),
                ('nombre', models.CharField(blank=True, max_length=150, null=True, verbose_name='Nombre de la Cuenta')),
                ('nivel', models.SmallIntegerField(default=1)),
                ('tipo_cuenta', models.CharField(blank=True, max_length=150, null=True, verbose_name='Tipo de Cuenta')),
                ('estado', models.BooleanField(default=True, verbose_name='Estado ')),
                ('band_deudor', models.BooleanField(default=False)),
                ('band_total', models.BooleanField(default=False, verbose_name='Cuenta de Total')),
                ('band_valida', models.BooleanField(default=False)),
                ('band_gastoDistribuido', models.BooleanField(default=False)),
                ('periodo', models.CharField(blank=True, max_length=150, null=True, verbose_name='Periodo (Año)')),
                ('empresa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_reg_empresa.empresa', verbose_name='Empresa ')),
                ('parentId', models.ForeignKey(blank=True, db_column='idparentId', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idparentId', to='app_contabilidad_planCuentas.plancuenta', verbose_name='Cuenta Raiz o Cuenta Padre')),
            ],
            options={
                'verbose_name': 'Plan Cuenta',
                'verbose_name_plural': 'Planes Cuentas',
                'db_table': 'tb_planCuenta',
                'ordering': ['codigo'],
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='app_contabilidad_planCuentas.folder')),
            ],
            options={
                'verbose_name': 'Carpeta',
                'verbose_name_plural': 'Carpetas',
                'db_table': 'tb_Carpeta',
            },
        ),
        migrations.CreateModel(
            name='DetalleCuentasPlanCuenta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cheque', models.CharField(blank=True, max_length=400, null=True, verbose_name='Cheque')),
                ('band_integridad', models.SmallIntegerField(default=0)),
                ('orden', models.SmallIntegerField(default=0)),
                ('band_niif', models.BooleanField(default=False)),
                ('band_importacion', models.BooleanField(default=True)),
                ('origen', models.CharField(blank=True, max_length=90, null=True)),
                ('detalle', models.CharField(blank=True, default='', max_length=150, null=True, verbose_name='Detalle')),
                ('deducible', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('debe', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('haber', models.DecimalField(decimal_places=2, default=0.0, max_digits=19)),
                ('cuenta', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_contabilidad_planCuentas.plancuenta')),
                ('encabezadocuentaplan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_contabilidad_planCuentas.encabezadocuentasplancuenta')),
            ],
            options={
                'verbose_name': 'tb_detallecuentaplanCuenta',
                'verbose_name_plural': 'tb_detallecuentasplanCuenta',
                'db_table': 'tb_detallecuentasplanCuenta',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='AnexoTransaccional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estab', models.CharField(default=0, max_length=5, verbose_name='Establecimiento')),
                ('comp_serie', models.CharField(default=0, max_length=6, verbose_name='Serie de comprobante')),
                ('comp_numero', models.CharField(max_length=9, verbose_name='Número de comprobante')),
                ('comp_numero_full', models.CharField(max_length=20, verbose_name='Número de comprobante completo')),
                ('comp_fecha', models.DateField(blank=True, null=True, verbose_name='Fecha registro')),
                ('ag_ret', models.CharField(default='Si', max_length=5)),
                ('sust_trib', models.CharField(default='No existe sustituto tributario', max_length=500, verbose_name='Sustento Tributario')),
                ('tipo_comp', models.CharField(default='No existe tipo de comprobante', max_length=500, verbose_name='Tipo de Comprobante')),
                ('secuencia', models.CharField(default=0, max_length=5)),
                ('comp_fecha_reg', models.DateField(blank=True, null=True, verbose_name='Fecha Reg. Contable')),
                ('comp_fecha_em', models.DateField(blank=True, null=True, verbose_name='Fecha de Emisión')),
                ('n_autoriz', models.CharField(default='No existe ingreso', max_length=500, verbose_name='Numero de Autorización')),
                ('base_dif_cero_iva', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base IVA dif 0')),
                ('base_cero', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base 0%')),
                ('base_iva_normal', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base IVA Normal')),
                ('base_iva_bienes', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA Compra Bienes')),
                ('base_no_obj_iva', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base no Obj IVA')),
                ('base_excent_iva', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base excenta IVA')),
                ('base_ice', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base ICE')),
                ('base_cero_bruto', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base 0%')),
                ('base_cero_bruto_fcientocuatro', models.DecimalField(decimal_places=0, default=0, max_digits=19)),
                ('base_iva_normal_bruto', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base IVA Normal')),
                ('base_iva_normal_bruto_fcientocuatro', models.DecimalField(decimal_places=0, default=0, max_digits=19)),
                ('base_iva_bienes_bruto', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA Compra Bienes')),
                ('base_iva_bienes_bruto_fcientocuatro', models.DecimalField(decimal_places=0, default=0, max_digits=19)),
                ('base_cero_neto', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base 0%')),
                ('base_iva_normal_neto', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base IVA Normal')),
                ('base_iva_normal_porcen', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base IVA Normal')),
                ('base_iva_bienes_porcen', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA Compra Bienes')),
                ('monto_iva_normal', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Monto IVA Normal')),
                ('monto_iva_bienes', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Monto Compra Bienes')),
                ('monto_ice', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Monto ICE')),
                ('monto_total', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='TOTAL FACT')),
                ('ret_serie', models.CharField(default=0, max_length=6, verbose_name='Serie de Retención')),
                ('ret_numero', models.CharField(max_length=9, verbose_name='Número de Retención')),
                ('ret_numero_full', models.CharField(max_length=20, verbose_name='Número de retención completo')),
                ('ret_fecha', models.DateField(blank=True, null=True, verbose_name='Fecha Emision Retencion')),
                ('iva_cero', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA 0%')),
                ('iva_diez', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA 10%')),
                ('iva_veint', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA 20%')),
                ('iva_treint', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA 30%')),
                ('iva_cinc', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA 50%')),
                ('iva_setn', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA 70%')),
                ('iva_cien', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='IVA 100%')),
                ('ret_fue_iva_uno', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base 1')),
                ('ret_fue_iva_dos', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base 2')),
                ('ret_fue_iva_tres', models.DecimalField(decimal_places=2, default=0.0, max_digits=19, verbose_name='Base 3')),
                ('reem_serie', models.CharField(default=0, max_length=6, verbose_name='Serie de Reembolso')),
                ('reem_numero', models.CharField(max_length=9, verbose_name='Número de Reembolso')),
                ('reem_numero_full', models.CharField(max_length=20, verbose_name='Número de reembolso completo')),
                ('reem_fecha', models.DateField(blank=True, null=True, verbose_name='Fecha Emision Reembolso')),
                ('reem_ruc', models.CharField(blank=True, default=0, max_length=13, null=True, verbose_name='RUC de Reembolso')),
                ('tip_form', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Tipo de Forma de Pago')),
                ('det_form', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Detalle Forma de Pago')),
                ('environment_type', models.PositiveIntegerField(choices=[(1, 'PRUEBAS'), (2, 'PRODUCCIÓN')], default=1)),
                ('access_code', models.CharField(blank=True, max_length=49, null=True, verbose_name='Clave de acceso')),
                ('xml_authorized', models.FileField(blank=True, null=True, upload_to='', verbose_name='XML Autorizado')),
                ('pdf_authorized', models.FileField(blank=True, null=True, upload_to='pdf_authorized/%Y/%m/%d', verbose_name='PDF Autorizado')),
                ('create_electronic_document', models.BooleanField(default=True, verbose_name='Crear documento electrónico')),
                ('status', models.CharField(choices=[('without_authorizing', 'Sin Autorizar'), ('authorized', 'Autorizada'), ('authorized_and_sent_by_email', 'Autorizada y enviada por email'), ('canceled', 'Anulado'), ('sequential_registered_error', 'Error de secuencial registrado')], default='without_authorizing', max_length=50, verbose_name='Estado')),
                ('encabezadocuentaplan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app_contabilidad_planCuentas.encabezadocuentasplancuenta')),
                ('receipt', models.ForeignKey(limit_choices_to={'voucher_type__in': ['01', '08']}, on_delete=django.db.models.deletion.PROTECT, to='app_contabilidad_planCuentas.recibo', verbose_name='Tipo de comprobante')),
            ],
            options={
                'verbose_name': 'tb_anexoTransaccional',
                'verbose_name_plural': 'tb_anexosTransaccionales',
                'db_table': 'tb_anexoTransaccional',
                'ordering': ['id'],
            },
        ),
    ]
